package leet_239

import (
	"testing"

	"github.com/stretchr/testify/assert"
)

func TestMaxSlidingWindow(t *testing.T) {
	var testData = []struct {
		in  []int
		k   int
		out []int
	}{
		{
			in:  []int{9, 8, 7, 6, 5, 4, 3, 2, 1, 2, 3, 8, 7},
			k:   2,
			out: []int{9, 8, 7, 6, 5, 4, 3, 2, 2, 3, 8, 8},
		},
		{
			in:  []int{-95, 92, -85, 59, -59, -14, 88, -39, 2, 92, 94, 79, 78, -58, 37, 48, 63, -91, 91, 74, -28, 39, 90, -9, -72, -88, -72, 93, 38, 14, -83, -2, 21, 4, -75, -65, 3, 63, 100, 59, -48, 43, 35, -49, 48, -36, -64, -13, -7, -29, 87, 34, 56, -39, -5, -27, -28, 10, -57, 100, -43, -98, 19, -59, 78, -28, -91, 67, 41, -64, 76, 5, -58, -89, 83, 26, -7, -82, -32, -76, 86, 52, -6, 84, 20, 51, -86, 26, 46, 35, -23, 30, -51, 54, 19, 30, 27, 80, 45, 22},
			k:   10,
			out: []int{92, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 91, 91, 91, 91, 91, 91, 91, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 63, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 59, 48, 87, 87, 87, 87, 87, 87, 87, 87, 87, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 78, 78, 78, 78, 78, 83, 83, 83, 83, 83, 83, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 84, 84, 84, 54, 54, 54, 54, 80, 80, 80},
		},
		{
			in:  []int{},
			k:   10,
			out: []int{},
		},
		{
			in:  []int{},
			k:   0,
			out: []int{},
		},
		{
			in:  []int{1, 2, 3, 4, 5, 6, 7, 8, 2, 5, 1},
			k:   5,
			out: []int{5, 6, 7, 8, 8, 8, 8},
		},
		{
			in:  []int{1, 2, 3, 4, 5, 6, 7, 8, 2, 5, 1},
			k:   3,
			out: []int{3, 4, 5, 6, 7, 8, 8, 8, 5},
		},
		{
			in:  []int{1, 3, -1, -3, 5, 3, 6, 7},
			k:   3,
			out: []int{3, 3, 5, 5, 6, 7},
		},
		{
			in:  []int{1, 3, -1, -3, 5, 3, 6, 7},
			k:   1,
			out: []int{1, 3, -1, -3, 5, 3, 6, 7},
		},
	}
	ass := assert.New(t)
	for _, tc := range testData {
		got := maxSlidingWindow(tc.in, tc.k)
		ass.Equal(tc.out, got, "k:%d in:%v\ngot: %v\nexpect: %v\n", tc.k, tc.in, got, tc.out)
	}
}

func BenchmarkSlide(b *testing.B) {
	in := []int{-95, 92, -85, 59, -59, -14, 88, -39, 2, 92, 94, 79, 78, -58, 37, 48, 63, -91, 91, 74, -28, 39, 90, -9, -72, -88, -72, 93, 38, 14, -83, -2, 21, 4, -75, -65, 3, 63, 100, 59, -48, 43, 35, -49, 48, -36, -64, -13, -7, -29, 87, 34, 56, -39, -5, -27, -28, 10, -57, 100, -43, -98, 19, -59, 78, -28, -91, 67, 41, -64, 76, 5, -58, -89, 83, 26, -7, -82, -32, -76, 86, 52, -6, 84, 20, 51, -86, 26, 46, 35, -23, 30, -51, 54, 19, 30, 27, 80, 45, 22}
	k := 10
	for i := 0; i < b.N; i++ {
		maxSlidingWindow(in, k)
	}
}
